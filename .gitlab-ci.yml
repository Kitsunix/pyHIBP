stages:
  - test
  - post-test

before_script:
  - date

after_script:
  - date

# For package caching
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache"
  PIPENV_CACHE_DIR: "$CI_PROJECT_DIR/.cache"

.junit_test_results: &junit_test_results
  artifacts:
    reports:
      junit: .pytest-junit.xml
    expire_in: 4 weeks

python35:
  <<: *junit_test_results
  stage: test
  image: python:3.5-alpine
  cache:
    key: "python3"
    paths:
      - .cache/
  script:
    # Build out the docker image with what we need to get the tests rolling
    - apk add --update libffi-dev python3 python3-dev make g++ git
    - python3 -V
    - wget -O - https://bootstrap.pypa.io/get-pip.py | python3
    - pip install pipenv
    # Start the test stuff.
    - export TOXENV=py35
    - make tox

python36:
  <<: *junit_test_results
  stage: test
  image: python:3.6-alpine
  cache:
    key: "python3"
    paths:
      - .cache/
  script:
    # Build out the docker image with what we need to get the tests rolling
    - apk add --update libffi-dev python3 python3-dev make g++ git
    - python3 -V
    - wget -O - https://bootstrap.pypa.io/get-pip.py | python3
    - pip install pipenv
    # Start the test stuff.
    - export TOXENV=py36
    - make tox

python37:
  <<: *junit_test_results
  stage: test
  image: python:3.7-alpine
  cache:
    key: "python3"
    paths:
      - .cache/
  script:
    # Build out the docker image with what we need to get the tests rolling
    - apk add --update libffi-dev python3 python3-dev make g++ git
    - python3 -V
    - wget -O - https://bootstrap.pypa.io/get-pip.py | python3
    - pip install pipenv
    # Start the test stuff.
    - export TOXENV=py37
    - make tox

include:
  - template: SAST.gitlab-ci.yml
  - template: Code-Quality.gitlab-ci.yml

sast:
  stage: post-test
  artifacts:
    expire_in: 2 weeks

code_quality:
  stage: post-test
  artifacts:
    expire_in: 2 weeks
