image: alpine:latest

stages:
  - test
  - post-test

python2:
  stage: test
  script:
    # Build out the docker image with what we need to get the tests rolling
    - apk add --update libffi-dev python2 python2-dev make g++ git
    - wget -O - https://bootstrap.pypa.io/get-pip.py | python2
    - pip install pipenv
    # Start the test stuff.
    # - make dev
    - export TOXENV=py27
    - make tox

python3:
  stage: test
  script:
    # Build out the docker image with what we need to get the tests rolling
    - apk add --update libffi-dev python3 python3-dev make g++ git
    - wget -O - https://bootstrap.pypa.io/get-pip.py | python3
    - pip install pipenv
    # Start the test stuff.
    # - make dev
    - export TOXENV=py36
    - make tox

code_quality:
  stage: post-test
  image: docker:stable
  variables:
    DOCKER_DRIVER: overlay2
  allow_failure: true
  services:
    - docker:stable-dind
  script:
    - export SP_VERSION=$(echo "$CI_SERVER_VERSION" | sed 's/^\([0-9]*\)\.\([0-9]*\).*/\1-\2-stable/')
    - docker run
        --env SOURCE_CODE="$PWD"
        --volume "$PWD":/code
        --volume /var/run/docker.sock:/var/run/docker.sock
        "registry.gitlab.com/gitlab-org/security-products/codequality:$SP_VERSION" /code
  artifacts:
    paths: [gl-code-quality-report.json]
    expire_in: 4 weeks

.dependency_scanning:
  stage: post-test
  image: docker:stable
  variables:
    DOCKER_DRIVER: overlay2
  allow_failure: true
  services:
    - docker:stable-dind
  script:
    - export SP_VERSION=$(echo "$CI_SERVER_VERSION" | sed 's/^\([0-9]*\)\.\([0-9]*\).*/\1-\2-stable/')
    - docker run
        --env DEP_SCAN_DISABLE_REMOTE_CHECKS="${DEP_SCAN_DISABLE_REMOTE_CHECKS:-false}"
        --volume "$PWD:/code"
        --volume /var/run/docker.sock:/var/run/docker.sock
        "registry.gitlab.com/gitlab-org/security-products/dependency-scanning:$SP_VERSION" /code
  artifacts:
    paths: [gl-dependency-scanning-report.json]
    expire_in: 4 weeks

sast:
  stage: post-test
  image: docker:stable
  variables:
    DOCKER_DRIVER: overlay2
  allow_failure: true
  services:
    - docker:stable-dind
  script:
    - export SP_VERSION=$(echo "$CI_SERVER_VERSION" | sed 's/^\([0-9]*\)\.\([0-9]*\).*/\1-\2-stable/')
    - docker run
        --env SAST_CONFIDENCE_LEVEL="${SAST_CONFIDENCE_LEVEL:-3}"
        --volume "$PWD:/code"
        --volume /var/run/docker.sock:/var/run/docker.sock
        "registry.gitlab.com/gitlab-org/security-products/sast:$SP_VERSION" /app/bin/run /code
  artifacts:
    paths: [gl-sast-report.json]
    expire_in: 4 weeks
