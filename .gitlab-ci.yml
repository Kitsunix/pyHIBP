stages:
  - test
  - post-test

before_script:
  - date

after_script:
  - date

# For package caching
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache"
  PIPENV_CACHE_DIR: "$CI_PROJECT_DIR/.cache"

.junit_test_results: &junit_test_results
  artifacts:
    reports:
      junit: .pytest-junit.xml
    expire_in: 4 weeks

python35:
  <<: *junit_test_results
  stage: test
  image: python:3.5-alpine
  cache:
    key: "python3"
    paths:
      - .cache/
  script:
    # Build out the docker image with what we need to get the tests rolling
    - apk add --update libffi-dev python3 python3-dev make g++ git
    - python3 -V
    - wget -O - https://bootstrap.pypa.io/get-pip.py | python3
    - pip install pipenv
    # Start the test stuff.
    - export TOXENV=py35
    - make tox

python36:
  <<: *junit_test_results
  stage: test
  image: python:3.6-alpine
  cache:
    key: "python3"
    paths:
      - .cache/
  script:
    # Build out the docker image with what we need to get the tests rolling
    - apk add --update libffi-dev python3 python3-dev make g++ git
    - python3 -V
    - wget -O - https://bootstrap.pypa.io/get-pip.py | python3
    - pip install pipenv
    # Start the test stuff.
    - export TOXENV=py36
    - make tox

python37:
  <<: *junit_test_results
  stage: test
  image: python:3.7-alpine
  cache:
    key: "python3"
    paths:
      - .cache/
  script:
    # Build out the docker image with what we need to get the tests rolling
    - apk add --update libffi-dev python3 python3-dev make g++ git
    - python3 -V
    - wget -O - https://bootstrap.pypa.io/get-pip.py | python3
    - pip install pipenv
    # Start the test stuff.
    - export TOXENV=py37
    - make tox

code_quality:
  stage: post-test
  image: docker:stable
  variables:
    DOCKER_DRIVER: overlay2
  allow_failure: true
  services:
    - docker:stable-dind
  script:
    - export SP_VERSION=$(echo "$CI_SERVER_VERSION" | sed 's/^\([0-9]*\)\.\([0-9]*\).*/\1-\2-stable/')
    - docker run
        --env SOURCE_CODE="$PWD"
        --volume "$PWD":/code
        --volume /var/run/docker.sock:/var/run/docker.sock
        "registry.gitlab.com/gitlab-org/security-products/codequality:$SP_VERSION" /code
  artifacts:
    reports:
      codequality: gl-code-quality-report.json
    expire_in: 4 weeks

include:
  template: SAST.gitlab-ci.yml

sast:
  stage: post-test
  artifacts:
    expire_in: 4 weeks
