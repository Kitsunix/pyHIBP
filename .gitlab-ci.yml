image: debian:latest

stages:
  - test
  - post-test

python2:
  stage: test
  script:
    # Tox/Pipenv requires the LC_ALL/LANG envars set during the py3 run
    - export LC_ALL=C.UTF-8
    - export LANG=C.UTF-8
    - export TOXENV=py27  # Only Python 2.7.x on this job
    - apt-get update
    - apt-get -y install python build-essential curl git
    - curl https://bootstrap.pypa.io/get-pip.py > get-pip.py
    - python ./get-pip.py
    # We need to remove get-pip.py, or check-manifest in tox has a fit
    - rm ./get-pip.py
    - pip install pipenv
    - make dev
    - make tox

python3:
  stage: test
  script:
    # Tox/Pipenv requires the LC_ALL/LANG envars set during the py3 run
    - export LC_ALL=C.UTF-8
    - export LANG=C.UTF-8
    - export TOXENV=py35  # Only Python 3.5.x on this job
    - apt-get update
    - apt-get -y install python3 build-essential curl git
    - curl https://bootstrap.pypa.io/get-pip.py > get-pip.py
    - python3 ./get-pip.py
    # We need to remove get-pip.py, or check-manifest in tox has a fit
    - rm ./get-pip.py
    - pip install pipenv
    - make dev
    - make tox

codequality:
  stage: post-test
  image: docker:stable
  variables:
    DOCKER_DRIVER: overlay2
  allow_failure: true
  services:
    - docker:stable-dind
  script:
    - export SP_VERSION=$(echo "$CI_SERVER_VERSION" | sed 's/^\([0-9]*\)\.\([0-9]*\).*/\1-\2-stable/')
    - docker run
        --env SOURCE_CODE="$PWD"
        --volume "$PWD":/code
        --volume /var/run/docker.sock:/var/run/docker.sock
        "registry.gitlab.com/gitlab-org/security-products/codequality:$SP_VERSION" /code
  artifacts:
    paths: [codeclimate.json]
    expire_in: 4 weeks

.dependency_scanning:
  stage: post-test
  image: docker:stable
  variables:
    DOCKER_DRIVER: overlay2
  allow_failure: true
  services:
    - docker:stable-dind
  script:
    - export SP_VERSION=$(echo "$CI_SERVER_VERSION" | sed 's/^\([0-9]*\)\.\([0-9]*\).*/\1-\2-stable/')
    - docker run
        --env DEP_SCAN_DISABLE_REMOTE_CHECKS="${DEP_SCAN_DISABLE_REMOTE_CHECKS:-false}"
        --volume "$PWD:/code"
        --volume /var/run/docker.sock:/var/run/docker.sock
        "registry.gitlab.com/gitlab-org/security-products/dependency-scanning:$SP_VERSION" /code
  artifacts:
    paths: [gl-dependency-scanning-report.json]
    expire_in: 4 weeks

.sast:
  stage: post-test
  image: docker:stable
  variables:
    DOCKER_DRIVER: overlay2
  allow_failure: true
  services:
    - docker:stable-dind
  script:
    - export SP_VERSION=$(echo "$CI_SERVER_VERSION" | sed 's/^\([0-9]*\)\.\([0-9]*\).*/\1-\2-stable/')
    - docker run
        --env SAST_CONFIDENCE_LEVEL="${SAST_CONFIDENCE_LEVEL:-3}"
        --volume "$PWD:/code"
        --volume /var/run/docker.sock:/var/run/docker.sock
        "registry.gitlab.com/gitlab-org/security-products/sast:$SP_VERSION" /app/bin/run /code
  artifacts:
    paths: [gl-sast-report.json]
    expire_in: 4 weeks
